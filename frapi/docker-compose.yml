
######################
# Database server
dbdata:
    image: busybox
    volumes:
        - ../data/rdb:/data:rw
rdb:
    image: rethinkdb    # http://rethinkdb.com/blog/docker-repo
    volumes_from:
         - dbdata     # Import data directory from storage container
# rdbslave:
#     image: rethinkdb    # http://rethinkdb.com/blog/docker-repo
#     command: rethinkdb --join master:29015 --bind all
#     links:
#         - rdb:master

# ######################
# # Do actions (e.g. backups)
backupdata:
    image: busybox
    volumes:
        - ../data/backup:/backup:rw
        - ../docker/tasks/dbbackup_hour:/etc/cron.hourly/dbbackup
tasker:
    build: ../docker/tasks
    links:
        - rdb:db
    volumes_from:
        - backupdata

######################
# Python api server connected to Rethink DB database (port 5000)
pycode:
    image: busybox
    volumes:
        - ../app:/opt/app:ro
        - ../imgresize:/zoomify:rw
api:
    build: ../docker/pyapp
    command: gunicorn -c gunicorn.conf.py main:app
    #command: sleep 1234567890  #DEBUG
    volumes_from:
        - pycode
    working_dir: /opt/app
    links:
        - rdb:db

######################
# Python api file server (port 6000)
updata:
    image: busybox
    volumes:
        - ../data/files:/uploads:rw
        - ../yoapp/app:/var/www:ro
fileapi:
    build: ../docker/pyapp
    command: python file.py #https?
    #command: sleep 12345898
    volumes_from:
        - pycode
        - updata
    working_dir: /opt/app

######################
# A proxy for all requests from the outside world
proxy:
    image: nginx
    links:
        - api:api # i need to know the internal container which exposes api
        - fileapi:fapi
        # ONLY DEBUG
        - webdev:capi
        - rdb:rmonitor
    ports:
        - "80:8080" #the proxy
        # ONLY DEBUG
        - "4321:9090" #the debug db chateau
        - "5432:7070" #the debug db monitor

        #- "443:443" # ssl server
# THIS WAY i only have to https certificate this server
        #- ../certificates:/etc/nginx/certs
#         # # SSL
#         # - ../docker/gui/sites.conf:/etc/nginx/sites-enabled/default
#         # # Certificates
#         # - ../certificates/key:/etc/nginx/ssl/server.key
#         # - ../certificates/domain.cert:/etc/nginx/ssl/server.crt
    volumes:
        - ../docker/proxy/nginx.conf:/etc/nginx/nginx.conf
        - ../docker/proxy/sites-enabled.conf:/etc/nginx/sites-enabled/configuration
    volumes_from:
        - updata

#########################################
#########################################
# FILE SHARE

myftp:
    image: stilliard/pure-ftpd
    #command:
    ports:
        - "20:20"
        - "21:21"
        - "20000:20000"
        - "20001:20001"
        - "20002:20002"
        - "20003:20003"
        - "20004:20004"
        - "20005:20005"
        - "20006:20006"
        - "20007:20007"
        - "20008:20008"
        - "20009:20009"
        - "20010:20010"
        # When the issue is fixed
        # https://github.com/docker/compose/issues/1102
        # https://github.com/docker/compose/pull/1191
        # then ports will be
        # - "20000-20010"
    volumes:
        - docker/ftp/ports:/etc/pure-ftpd/conf/PassivePortRange
        - docker/ftp/clients:/etc/pure-ftpd/conf/MaxClientsNumber
    volumes_from:
        - backupdata

## Add user:
#$ docker exec -it frapi_myftp_1 bash -c "yes 'test' | pure-pw useradd bob -u ftpuser -d /backup && pure-pw mkdb"

## Fix permissions:
#$ docker-machine ssh myocean1 chmod 777 /Users/projects/frapi/data/backup

## Switch to old node and backup:
#$ docker exec -it frapi_tasker_1 rethinkdb-dump -c db -f /backup/latest_dump.tar.gz

## Transfer the file via ftp to new node:
#$ echo put latest.tar.gz init.tar.gz | ftp ftp://bob:test@HOSTNAME

## Switch to the new node via machine and restore:
#$ docker exec -it frapi_tasker_1 rethinkdb-restore -c db --force /backup/init.tar.gz
## Also consider about cleaning old tables inside 'webapp' if any

#########################################
#########################################
# DEBUG

######################
# Web development angular pages running on a javascript server
# ONLY DEBUG
webdev:
    build: ../docker/jsdev
    command: sleep 123456789
    volumes:
        - ../yoapp:/opt/jsapp
    links:
        - rdb:db
######################

## ALSO

#proxydebug:?
#apidebug/fileapidebug? different command


# If you modify proxy configuration, then:
# docker exec frapi_proxy_1 nginx -s reload