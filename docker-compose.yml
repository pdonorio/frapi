
######################
# Database server
dbdata:
    image: busybox
    volumes:
        - ./data/rdb:/data:rw
rdb:
    image: rethinkdb    # http://rethinkdb.com/blog/docker-repo
    volumes_from:
         - dbdata     # Import data directory from storage container
    ports:
        - "9175:8080" # Rdb monitoring cluster - DEBUG
# rdbslave:
#     image: rethinkdb    # http://rethinkdb.com/blog/docker-repo
#     command: rethinkdb --join master:29015 --bind all
#     links:
#         - rdb:master

# ######################
# # Do actions (e.g. backups)
backupdata:
    image: busybox
    volumes:
        - ./data/backup:/backup:rw
        - ./docker/tasks/dbbackup_hour:/etc/cron.hourly/dbbackup
tasker:
    build: ./docker/tasks
    links:
        - rdb:db
    volumes_from:
        - backupdata

######################
# Python api server connected to Rethink DB database (port 5000)
pycode:
    image: busybox
    volumes:
        - ./app:/opt/app:ro
api:
    build: ./docker/pyapp
    command: gunicorn -c gunicorn.conf.py main:app
    #command: sleep 1234567890  #DEBUG
    volumes_from:
        - pycode
    working_dir: /opt/app
    links:
        - rdb:db

######################
# Python api file server (port 6000)
updata:
    image: busybox
    volumes:
        - ./data/files:/uploads:rw
fileapi:
    build: ./docker/pyapp
    command: python file.py #https?
    volumes_from:
        - pycode
        - updata
    working_dir: /opt/app

######################
# # Web development angular pages running on a javascript server
# webdev:
#     build: ./docker/jsdev
#     command: sleep 123456789
#     volumes:
#         - ./yoapp:/opt/jsapp
#     working_dir:
#         - /opt/jsapp
#     links:
#         - rdb:db

######################
# A proxy for all requests from the outside world
proxy:
    image: nginx
    links:
        - api:api # i need to know the internal container which exposes api
        - fileapi:fapi
    ports:
        - "80:8080" #the proxy
        #- "443:443" # ssl server
# THIS WAY i only have to https certificate this server
        #- ./certificates:/etc/nginx/certs
#         # # SSL
#         # - ./docker/gui/sites.conf:/etc/nginx/sites-enabled/default
#         # # Certificates
#         # - ./certificates/key:/etc/nginx/ssl/server.key
#         # - ./certificates/domain.cert:/etc/nginx/ssl/server.crt
    volumes:
        - ./docker/proxy/nginx.conf:/etc/nginx/nginx.conf
        - ./docker/proxy/api:/etc/nginx/sites-enabled/myapi
        - ./yoapp/app:/var/www
        #- ./docker/proxy/file:/etc/nginx/sites-enabled/myfapi

# If you modify proxy configuration, then:
# docker exec frapi_proxy_1 nginx -s reload