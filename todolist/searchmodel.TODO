
✔ Search in angularjs @done (15-10-16 18:02)
✔ every keypress reload table @done (15-10-16 18:02)
✔ change filter parameter for api @done (15-10-16 18:02)
✔ apply parameter inside api @done (15-10-16 17:58)
✔ use filter or contains with RDB @done (15-10-16 17:58)
  ✔ python and lambda!! @done (15-10-16 17:57)

#JAVASCRIPT

//EXPERIMENT
r.db('webapp').table('stepscontent').filter({'step':1}).filter(
  function(row) {return row("values").contains("A")}
)

//CONTAINS
r.db('webapp').table('stepscontent').filter({'step':1}).filter(
  function(row) {return row("values").contains("Agen_4")}
);

#PYTHON
query = query.filter(lambda row: \
    row["values"].contains(lambda key: \
        key.match("nv")))

NEW:
  ☐ documentation!
    ☐ MARKDOWN please :D
  ☐ start from rest-mock
    ☐ handle non json request
      ☐ refuse and list accepted types (only JSON :D)
    ☐ marshal to define models (from json file)
      ☐ a list of json files in a certain directory.
        ☐ recursive definition of marshal
        ☐ only flask sees this file, but via javascript you should use the same structures
        ☐ create table if not exist at app runtime
    ☐ redirect post completed to list the document (get + id)
    ☐ GET
      ☐ filter parameter
        ☐ apply filter in RethinkDB
        ☐ regular expression = contains?
  ☐ rdb borg connection
  ☐ rdb saves json into table!
    ☐ no rdb models
    ☐ no javascript models!!
  ☐ Add UI
    ☐ gulp-angular
    ☐ bootstrap 4 alpha?
  ☐ convert old data
  ☐ production / develpoment
    ☐ docker compose
      ☐ flask / gunicorn
      ☐ nginx / ssl
    ☐ flask config
      ☐ blueprints?
      ☐ app factory?
  ☐ Angular Autoforms
    ☐ from json!!
  ☐ Users
    ☐ tokens
    ☐ RBAC
    ☐ admin
  ☐ Upload

RDB:
☐ But what if i want to search only in a given position of the array?
✔ Testing json save @done (15-10-20 07:30)
 ✘ serializing javascript class/objects? @cancelled (15-10-20 07:30)
✔ Marshal restful @done (15-10-20 09:03)

RESOURCES (almost) RANDOM
* A clone?
https://github.com/JeffHeard/sondra
* Form Resources
https://github.com/Textalk/angular-schema-form
* Comments
https://commentit.io/getting-started

VALIDATORS

$ pip install validators
$ python
>>> import validators
>>> url = "http://index.hu"
>>> validators.url(url)
True
>>> url = "http://index.h/"
>>> validators.url(url)
ValidationFailure(func=url, args={'value': 'http://index.h/', 'require_tld': True})

if not validators.url(url):
    flash("Error: you must provide a valid URL!")