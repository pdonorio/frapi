
FRANGUI = flask restful api nginx Gui:

 ✔  Static angular page (nginx docker) @done (14-11-29 09:53)
 ✔  http get/post @done (14-11-29 09:53)
 ✔  ng-repeat and duplicates @done (14-11-29 09:53)
 ✔ Bootstrap 3 wrapping + iconfonts  @done (14-11-29 15:23)
   ✔ angularstrap (NO JQUERY) @done (14-11-29 14:15)
   ✘ ng-init for loader? @cancelled (14-11-29 15:13)
   ✘ recipes for loading spinner - http://j.mp/1FFK7AO @cancelled (14-11-29 15:23)
     ✔ http://stackoverflow.com/a/12602481 @done (14-11-29 15:38)
     ✔ added $timeout call to simulate the loading gif @done (14-11-29 15:39)
   ✔ striped table @done (14-11-29 18:00)
 ☐ Angular datatable like (with pagination)
   ✔ pagination @done (14-11-29 19:56)
     ✔ api side @done (14-11-29 19:56)
       ✔ pagination default parameters @done (14-11-30 08:55)
       ✔ query slice (rethinkdb) @done (14-11-29 19:56)
         ✔ query.slice((pageNumber - 1) * perPage, pageNumber * perPage) @done (14-11-29 19:56)
     ✔ count and items (in json data) response @done (14-11-30 09:23)
     ☐ call with parameters, perpage, currentpage
     ☐ page buttons template (angular)
       ☐ https://github.com/michaelbromley/angularUtils/tree/master/src/directives/pagination
   ☐ sort?
   ☐ promises
   ☐ infinite scrolling??
   ☐ simple search all fields?
 ☐ Little fun with angular strap  2.1.4 (downgrade angular to 1.3.1? )
   ☐ http://mgcrea.github.io/angular-strap/#/page-one#getting-started
   ☐ https://github.com/mgcrea/angular-strap/releases
 ☐ API: Check post, put and delete for parameters
 ☐ routes and views
 ☐ Implement POST
    ☐ https://realpython.com/blog/python/flask-by-example-integrating-flask-and-angularjs/
 ✘ resources usage instead of http? @cancelled (14-12-05 09:21)
    ✔ http://fdietz.github.io/recipes-with-angular-js/consuming-external-services/consuming-restful-apis.html @done (14-12-05 09:21)
 ✔ or Seriouse call to my python api with Restangular @done (14-12-05 09:21)
    ✔ http://www.ng-newsletter.com/posts/restangular.html [lodash or underscore?] @done (14-12-05 09:21)
    ✔ lodash @done (14-12-05 09:21)
 ☐ navbar fixed and responsive with angular strap
 ☐ minify??
[ Up to here: this is the prototype branch which will forever exist ]

WOW:
  ☐ A true new app in the new millennium
    ☐ http://zurb.com/article/1356/there-s-life-beyond-the-app-store
  ☐ A real portfolio
    ☐ http://themeforest.net/user/Flatfull/portfolio
   ☐ Animations
    ☐ http://julian.com/research/velocity/
  ☐ A real developer..
    ☐ https://plus.google.com/+OlivierLouvignes/posts

NEXT prototype (prototype-language):
 ☐ language in nosql database holding
 ☐ Fast development/prototype
   ☐ http://bahmutov.calepin.co/fast-prototyping-using-restangular-and-json-server.html
   ☐ http://jphoward.wordpress.com/2013/01/09/intermissionrest-api-in-python-with-flask-restless/
 ☐ Suggestions with ng-suggest
   ☐ http://journal.code4lib.org/articles/10023

Some issues:
 ☐ Secure the api calls (only from some domains :) e.g. mydomain.com/ or localhost/)
   ☐ http://stackoverflow.com/a/2256312
 ☐ search for flask domain check?
 ☐ add a secret key hashed with the browser key.
   ☐ if it matches from browser ok, otherwise kill it?
 ☐ What about CORS?
   ☐ https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
  ☐ Maximum number of calls per second.
  ☐ Max per day.

TIPS:
 ☐ Dinamic loading and convenction names routing
   ☐ http://www.codeproject.com/Articles/808213/Developing-a-Large-Scale-Application-with-a-Single
 ☐ Tips for writing better angular code
   ☐ https://www.airpair.com/angularjs/posts/top-10-mistakes-angularjs-developers-make

NEXT NEXT prototype (prototype-scheduler):
 ☐ Redis queue? COOL
   ☐ https://realpython.com/blog/python/flask-by-example-implementing-a-redis-task-queue/

AUTH:
  ☐ Authentication
   ☐ Flask set SSL
   ☐ no clean passwords ;D
   ☐ Encryption class in bpract
     ☐ salt
     ☐ backoff after 3 failed try
   ☐ Token
   ☐ User Model should extend also AuthUser
   ☐ Flask-auth - some methods could be usefull
     ☐ Try to use Flask session
     ☐ set timeout to authenticated user
     ☐ Roles and groups
       ☐ from configuration file

FINAL stuff:
 ☐ Flask api code tree - see examples
   ☐ https://github.com/mitsuhiko/flask/wiki/Large-app-how-to
 ☐ A separate container for flask api which automatically reload :D
 ☐ snippets 4 sublime
     ☐ Cleaner docker startup script + requested dockerfile (only 2?)

OFFLINE APP:
  Offline web applications - REC
  http://caniuse.com/#feat=offline-apps
  ☐ Method of defining web page files to be cached using a cache manifest file, allowing them to work offline on subsequent visits to the page