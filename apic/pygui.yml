# Simple fs share
fs:
    image: busybox
    volumes:
        - ./tmp:/opt/fsshare
up:
    image: busybox
    volumes:
        - ./tmp/files:/uploads
data:
    build: ./docker/pybase
    volumes:
        - ./data/py:/data:rw
        - ./data:/rethinkdb:rw
# Database server master
rdb:
    build: ./docker/rethinkdb
    volumes_from:
         - data     # Import data directory from storage container
         - fs
    ports:
        - "8888:8080" # Rdb monitoring cluster - DEBUG
# Python api server connected to Rethink DB database
api:
    build: ./docker/webapp
    command: python file.py
    #command: gunicorn -w 4 -b 0.0.0.0:5000 main:app
    #command: bash /root/security.sh
    volumes:
        - ./app:/opt/app
        # - ./certificates/key:/myssl/certs/server.key
        # - ./certificates/domain.cert:/myssl/certs/server.crt
    working_dir: /opt/app
    volumes_from:
        - fs
        - up
    ports:
        #- "5507:5000" # expose the api to the world!
        - "5346:6000" # file handling (directly)
    links:
        - rdb:db
# Web static angular pages
apiproxy:
    build: ./docker/gui
    links:
        - api:api # i need to know the internal container which exposes api
    ports:
        - "5507:80" # expose the api to the world!
    volumes:
        - ./docker/gui/proxy.conf:/etc/nginx/sites-enabled/default
# Web development angular pages running on a javascript server
webdev:
    build: ./docker/node
    command: sleep 123456789
    volumes:
        - ./yoapp:/opt/yo
    working_dir: /opt/yo
    links:
        - rdb:db
    ports:
        - "8080:3000" # Chateau admin db

# Web static angular pages
web:
    build: ./docker/gui
    volumes_from:
        - up
    working_dir: /opt/app
    ports:
        - "80:80" # basic
        - "443:443" # ssl server
    volumes:
        - ./yoapp/app:/var/www/html
# TO FIX with grunt/gulp rebuild
        #- ./yoapp/dist:/var/www/html/static

# TO FIX - debug/production
        # # SSL
        # - ./docker/gui/sites.conf:/etc/nginx/sites-enabled/default
        # # Certificates
        # - ./certificates/key:/etc/nginx/ssl/server.key
        # - ./certificates/domain.cert:/etc/nginx/ssl/server.crt
